{"ast":null,"code":"import { BehaviorSubject, delay, of, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isAuthenticatedSubject = new BehaviorSubject(false);\n    // private afAuth = inject(AngularFireAuth)\n    this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n  }\n  login(username, password) {\n    const isAuthenticated = username === 'admin' && password === 'admin';\n    return of(isAuthenticated).pipe(delay(1000),\n    // Simulate an asynchronous operation\n    tap(auth => {\n      this.isAuthenticatedSubject.next(auth);\n    }));\n  }\n  logout() {\n    this.isAuthenticatedSubject.next(false);\n  }\n  isAuthenticated() {\n    return this.isAuthenticatedSubject.value;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","delay","of","tap","AuthService","constructor","isAuthenticatedSubject","isAuthenticated$","asObservable","login","username","password","isAuthenticated","pipe","auth","next","logout","value","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/puurkos/Desktop/ANGULAR/FQOH/src/app/services/auth.service.ts"],"sourcesContent":["import {inject, Injectable} from '@angular/core';\nimport {BehaviorSubject, delay, Observable, of, tap} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n  // private afAuth = inject(AngularFireAuth)\n  isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n  \n  constructor() { }\n\n  login(username: string, password: string): Observable<boolean> {\n    const isAuthenticated = username === 'admin' && password === 'admin';\n    return of(isAuthenticated).pipe(\n        delay(1000), // Simulate an asynchronous operation\n        tap((auth) => {\n          this.isAuthenticatedSubject.next(auth);\n        })\n    );\n  }\n  logout():void {\n    this.isAuthenticatedSubject.next(false);\n  }\n  isAuthenticated(): boolean {\n    return this.isAuthenticatedSubject.value;\n  }\n}\n"],"mappings":"AACA,SAAQA,eAAe,EAAEC,KAAK,EAAcC,EAAE,EAAEC,GAAG,QAAO,MAAM;;AAKhE,OAAM,MAAOC,WAAW;EAKtBC,YAAA;IAJQ,KAAAC,sBAAsB,GAAG,IAAIN,eAAe,CAAU,KAAK,CAAC;IACpE;IACA,KAAAO,gBAAgB,GAAG,IAAI,CAACD,sBAAsB,CAACE,YAAY,EAAE;EAE7C;EAEhBC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,eAAe,GAAGF,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO;IACpE,OAAOT,EAAE,CAACU,eAAe,CAAC,CAACC,IAAI,CAC3BZ,KAAK,CAAC,IAAI,CAAC;IAAE;IACbE,GAAG,CAAEW,IAAI,IAAI;MACX,IAAI,CAACR,sBAAsB,CAACS,IAAI,CAACD,IAAI,CAAC;IACxC,CAAC,CAAC,CACL;EACH;EACAE,MAAMA,CAAA;IACJ,IAAI,CAACV,sBAAsB,CAACS,IAAI,CAAC,KAAK,CAAC;EACzC;EACAH,eAAeA,CAAA;IACb,OAAO,IAAI,CAACN,sBAAsB,CAACW,KAAK;EAC1C;EAAC,QAAAC,CAAA,G;qBArBUd,WAAW;EAAA;EAAA,QAAAe,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}